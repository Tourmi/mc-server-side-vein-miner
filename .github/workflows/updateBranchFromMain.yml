name: Update branch from main

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
    secrets:
      token-github:
        required: true

jobs:
  update-branch:
    name: update branch ${{ inputs.branch }} from main
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
      name: Checking out ${{ inputs.branch }}
      with:
        fetch-depth: 0
        ref: ${{ inputs.branch }}
    
    - name: Prepare merge
      run: |
        git config --global user.name '${{ vars.BUILD_ACTOR_NAME }}'
        git config --global user.email '${{ vars.BUILD_ACTOR_EMAIL }}'
        git fetch origin
        
    - name: Merge main into ${{inputs.branch}}
      continue-on-error: true
      run: |
        git merge --no-ff --no-commit origin/main
    
    - name: Post-merge
      run: |
        git reset HEAD gradle.properties
        git checkout -- gradle.properties
      
    - uses: christian-draeger/read-properties@1.1.1
      id: java_version
      name: Read Java version
      with:
        path: './gradle.properties'
        properties: 'java_version'
    
    - name: Set up JDK ${{ steps.java_version.outputs.java_version }}
      uses: actions/setup-java@v4
      with:
        java-version: '${{ steps.java_version.outputs.java_version }}'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build

    - name: Commit and push merge
      run: |
        git commit -m "Merged main in branch"
        git push
    
    - name: Modify branch name for artifact
        env:
          name: "${{inputs.branch}}"
        run: |
          echo "safe_name=${name/\//-}" >> $GITHUB_ENV
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.3.3
      with:
        name: release-artifact-${{env.safe_name}}
        path: build/libs/svmm-*.jar
